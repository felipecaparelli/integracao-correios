{
  "name": "Integracao-correios",
  "tagline": "Biblioteca Java para Integração com o Web Service dos Correios (Prazo e Frete)",
  "body": "# integracao-correios\r\nBiblioteca Java para Integração com o Web Service dos Correios (Prazo e Frete)\r\n\r\n## Índice\r\n\r\n- [Introdução](#intro)\r\n- [Configurações](#configs)\r\n- [Uso básico](#basic)\r\n- [Parâmetros Complementares](#params)\r\n- [Dependências](#libs)\r\n\r\n## <a name=\"intro\"></a> Introdução\r\n\r\nEste projeto tem como propósito oferecer uma alternativa simples para a execução do [web service SOAP](http://ws.correios.com.br/calculador/CalcPrecoPrazo.asmx?WSDL) provido pela empresa **Correios** para os recursos de consulta de prazo e preço do frete. O serviço SOAP do Correios não é muito complexo, mas a idéia é abstrair o uso do SOAP para que você possa focar apenas na integração da sua loja virtual com o serviço que precisa.\r\n\r\n## <a name=\"configs\"></a> Configurações\r\n\r\nSe você deseja utilizar este projeto como uma biblioteca do seu projeto deverá seguir os seguintes passos:\r\n\r\n1. Baixe o projeto `git clone https://github.com/felipecaparelli/integracao-correios.git`\r\n2. Execute o maven `mvn clean install`\r\n3. Se você não utiliza o maven em seu projeto, copie a biblioteca /integracao-correios/correios-client/target/correios-client-0.0.1-SNAPSHOT.jar para seu diretório WEB-INF/lib, junto com uma tonelada de dependências listadas no [final deste arquivo](#libs).\r\n4. Voila!\r\n\r\n\r\n## <a name=\"basic\"></a> Uso básico\r\n\r\n\r\nO serviço já vem com os dados básicos da pesquisa preenchidos, sendo o serviço padrão utilizado o 'SEDEX Varejo'\r\n\r\n```java\r\n\t\t\tCorreiosPrecoPrazo result = new ConsultaCorreios().calcularPrecoPrazo(\"06053040\", \"80540220\")[0];\r\n\r\n\t\t\tSystem.out.println(\"Preço do Frete: \" + result.getPrecoFrete());\r\n\t\t\tSystem.out.println(String.format(\"Prazo de Entrega: %d dias\", result.getPrazoEntrega()));\r\n```\r\n\r\nDeixo claro que o objeto que construo no retorno não possui a mesma interface do objeto retornado pelo serviço do Correios, mas contém todos os dados que eles devolvem. Na realidade, a intenção do objeto que eu retorno é deixar mais claras as informações providas.\r\n\r\nComo o foco do projeto é sem um facilitador para programadores Java na integração com o serviço dos Correios, os dados parametrizados e retornados são em geral constituídos de variaveis que sejam coerentes com os tipos necessários (por exemplo, valores monetários que utilizaremos para cálculos são retornados como Double). \r\n\r\n## <a name=\"params\"></a> Parâmetros Complementares\r\n\r\nA API permite parametrizar todos os dados aceitos no web service do Correios, seguindo as mesmas [regras da validação do mesmo](https://www.correios.com.br/para-voce/correios-de-a-a-z/pdf/calculador-remoto-de-precos-e-prazos/manual-de-implementacao-do-calculo-remoto-de-precos-e-prazos):\r\n\r\n```java\r\n\t\t\tCorreiosPrecoPrazo result = new ConsultaCorreios()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.servicos(CorreiosTipoServico.PAC_VAREJO) //tipo de serviço 'PAC'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.entregarEmMaos(IndicadorSN.SIM) //indicador que define se a entrega deve ser em mãos\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.calcularPrecoPrazo(\"06053040\", \"80540220\")[0];\r\n\r\n\t\t\tSystem.out.println(\"Preço do Frete: \" + result.getPrecoFrete());\r\n\t\t\tSystem.out.println(String.format(\"Prazo de Entrega: %d dias\", result.getPrazoEntrega()));\r\n```\r\n\r\nPerceba que o retorno é um array de objetos do tipo CorreiosPrecoPrazo, pois o serviço do Correios retorna 1 elemento para cada tipo de serviço consultado. Se você parametrizar mais de um serviço terá múltiplos retornos:\r\n\r\n```java\r\n\t\t\tCorreiosPrecoPrazo[] results = new ConsultaCorreios()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.servicos(CorreiosTipoServico.PAC_VAREJO, CorreiosTipoServico.SEDEX_10_VAREJO)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.calcularPrecoPrazo(\"06053040\", \"80540220\");\r\n\r\n\t\t\tfor (CorreiosPrecoPrazo result : results) {\r\n\t\t\t\tSystem.out.println(\"Preço do Frete: \" + result.getPrecoFrete());\r\n\t\t\t\tSystem.out.println(String.format(\"Prazo de Entrega: %d dias\", result.getPrazoEntrega()));\r\n\t\t\t}\r\n```\r\n\r\nEssa é uma versão inicial e tem muito para melhorar. Se tiver interesse em evoluir e implementar os outros serviços disponibilizados pelo Correios fique a vontade para fazer um fork ou colaborar com este projeto ;)\r\n\r\n\r\n## <a name=\"libs\"></a> Dependências\r\n\r\nTodas as bibliotecas deste projeto estão diretamente ligadas à biblioteca [soap-ws](https://github.com/reficio/soap-ws), que é utilizada para realizar a chamada SOAP do web service do Correios.\r\n\r\n* junit-4.12.jar\r\n* hamcrest-core-1.3.jar\r\n* soap-builder-1.0.0-SNAPSHOT.jar\r\n* soap-common-1.0.0-SNAPSHOT.jar\r\n* wsdl4j-1.6.2.jar\r\n* commons-lang3-3.1.jar\r\n* xmlunit-1.3.jar\r\n* soap-legacy-1.0.0-SNAPSHOT.jar\r\n* xml-apis-1.0.b2.jar\r\n* batik-ext-1.7.jar\r\n* xercesImpl-2.10.0.jar\r\n* xbean-fixed-2.4.0.jar\r\n* xbean_xpath-2.4.0.jar\r\n* xmlbeans-xmlpublic-2.5.0.jar\r\n* stax-api-1.0.1.jar\r\n* jsr173-1.0.jar\r\n* saxon-9.1.0.8.jar\r\n* saxon-dom-9.1.0.8.jar\r\n* wsrf-xbeans-1.0.jar\r\n* XmlSchema-1.4.5.jar\r\n* soap-client-1.0.0-SNAPSHOT.jar\r\n* httpclient-4.2.3.jar\r\n* httpcore-4.2.2.jar\r\n* log4j-1.2.17.jar\r\n* commons-logging-1.1.1.jar\r\n* commons-io-2.3.jar\r\n* commons-codec-1.6.jar\r\n* guava-osgi-11.0.1.jar\r\n* soap-server-1.0.0-SNAPSHOT.jar\r\n* spring-ws-core-2.1.1.RELEASE.jar\r\n* spring-xml-2.1.1.RELEASE.jar\r\n* spring-context-3.1.2.RELEASE.jar\r\n* spring-expression-3.1.2.RELEASE.jar\r\n* spring-asm-3.1.2.RELEASE.jar\r\n* spring-aop-3.1.2.RELEASE.jar\r\n* aopalliance-1.0.jar\r\n* spring-oxm-3.1.2.RELEASE.jar\r\n* commons-lang-2.5.jar\r\n* spring-web-3.1.2.RELEASE.jar\r\n* spring-webmvc-3.1.2.RELEASE.jar\r\n* spring-context-support-3.1.2.RELEASE.jar\r\n* stax-api-1.0-2.jar\r\n* spring-core-3.1.2.RELEASE.jar\r\n* spring-beans-3.1.2.RELEASE.jar\r\n* jetty-embedded-6.1.26.jar\r\n* jetty-6.1.26.jar\r\n* servlet-api-2.5-20081211.jar\r\n* jetty-sslengine-6.1.26.jar\r\n* jsp-api-2.1.jar\r\n* jetty-java5-threadpool-6.1.26.jar\r\n* jetty-util-6.1.26.jar\r\n* slf4j-api-1.6.6.jar\r\n* slf4j-log4j12-1.6.6.jar",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}